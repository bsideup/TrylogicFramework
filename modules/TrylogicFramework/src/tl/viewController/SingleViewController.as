package tl.viewController{	import flash.display.DisplayObject;	import flash.display.DisplayObjectContainer;	import tl.view.IViewContainer;	public class SingleViewController extends ViewController implements ISingleViewController	{		[Outlet]		public var container : DisplayObjectContainer;		private var _currentViewController : IVIewController;		override public function getViewInterface() : Class		{			return IViewContainer;		}		public function get currentViewController() : IVIewController		{			return _currentViewController;		}		public function set currentViewController( value : IVIewController ) : void		{			if ( value == _currentViewController )			{				return;			}			var viewElement : DisplayObject;			if ( _currentViewController )			{				_currentViewController.removeViewFromContainer( container );				_currentViewController.parentViewController = null;			}			_currentViewController = value;			_currentViewController.parentViewController = this;			fillContainer();		}		override protected function viewLoaded() : void		{			super.viewLoaded();			fillContainer();		}		private function fillContainer() : void		{			if ( !viewIsLoaded )			{				return;			}			while ( container.numChildren )			{				container.removeChildAt( 0 );			}			if ( _currentViewController == null )			{				return;			}			_currentViewController.addViewToContainer( container );		}	}}